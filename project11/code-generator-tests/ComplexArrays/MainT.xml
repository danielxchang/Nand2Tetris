<tokens>
<keyword> class </keyword>
<identifier> class Main defined </identifier>
<symbol> { </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> subroutine main defined </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> var a defined 0 </identifier>
<symbol> , </symbol>
<identifier> var b defined 1 </identifier>
<symbol> , </symbol>
<identifier> var c defined 2 </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var a used 0 Array </identifier>
<symbol> = </symbol>
<identifier> class Array used </identifier>
<symbol> . </symbol>
<identifier> subroutine new used </identifier>
<symbol> ( </symbol>
<integerConstant> 10 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var b used 1 Array </identifier>
<symbol> = </symbol>
<identifier> class Array used </identifier>
<symbol> . </symbol>
<identifier> subroutine new used </identifier>
<symbol> ( </symbol>
<integerConstant> 5 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<identifier> class Array used </identifier>
<symbol> . </symbol>
<identifier> subroutine new used </identifier>
<symbol> ( </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 8 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 5 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> + </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> ] </symbol>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 5 </integerConstant>
<symbol> ] </symbol>
<symbol> ] </symbol>
<symbol> * </symbol>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<symbol> ( </symbol>
<symbol> ( </symbol>
<integerConstant> 7 </integerConstant>
<symbol> - </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> ) </symbol>
<symbol> - </symbol>
<identifier> class Main used </identifier>
<symbol> . </symbol>
<identifier> subroutine double used </identifier>
<symbol> ( </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<keyword> null </keyword>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printString used </identifier>
<symbol> ( </symbol>
<stringConstant> "Test 1: expected result: 5; actual result: " </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printInt used </identifier>
<symbol> ( </symbol>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ] </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine println used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printString used </identifier>
<symbol> ( </symbol>
<stringConstant> "Test 2: expected result: 40; actual result: " </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printInt used </identifier>
<symbol> ( </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 5 </integerConstant>
<symbol> ] </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine println used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printString used </identifier>
<symbol> ( </symbol>
<stringConstant> "Test 3: expected result: 0; actual result: " </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printInt used </identifier>
<symbol> ( </symbol>
<identifier> var c used 2 Array </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine println used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<keyword> null </keyword>
<symbol> ; </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<keyword> null </keyword>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> class Main used </identifier>
<symbol> . </symbol>
<identifier> subroutine fill used </identifier>
<symbol> ( </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> , </symbol>
<integerConstant> 10 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> = </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 7 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 77 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var b used 1 Array </identifier>
<symbol> = </symbol>
<identifier> var a used 0 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> + </symbol>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printString used </identifier>
<symbol> ( </symbol>
<stringConstant> "Test 4: expected result: 77; actual result: " </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printInt used </identifier>
<symbol> ( </symbol>
<identifier> var c used 2 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine println used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printString used </identifier>
<symbol> ( </symbol>
<stringConstant> "Test 5: expected result: 110; actual result: " </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine printInt used </identifier>
<symbol> ( </symbol>
<identifier> var b used 1 Array </identifier>
<symbol> [ </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ] </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> class Output used </identifier>
<symbol> . </symbol>
<identifier> subroutine println used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> subroutine double defined </identifier>
<symbol> ( </symbol>
<identifier> arg a defined 0 </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> return </keyword>
<identifier> arg a used 0 int </identifier>
<symbol> * </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> subroutine fill defined </identifier>
<symbol> ( </symbol>
<identifier> arg a defined 0 </identifier>
<symbol> , </symbol>
<identifier> arg size defined 1 </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> arg size used 1 int </identifier>
<symbol> &gt; </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> arg size used 1 int </identifier>
<symbol> = </symbol>
<identifier> arg size used 1 int </identifier>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> arg a used 0 Array </identifier>
<symbol> [ </symbol>
<identifier> arg size used 1 int </identifier>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> class Array used </identifier>
<symbol> . </symbol>
<identifier> subroutine new used </identifier>
<symbol> ( </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>
<tokens>
<keyword> class </keyword>
<identifier> class Main defined </identifier>
<symbol> { </symbol>
<identifier> static test defined 0 </identifier>
<symbol> ; </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> subroutine main defined </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> var game defined 0 </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> var game used 0 </identifier>
<symbol> = </symbol>
<identifier> var game used 0 </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> var game used 0 </identifier>
<symbol> . </symbol>
<identifier> subroutine run used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> var game used 0 </identifier>
<symbol> . </symbol>
<identifier> subroutine dispose used </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> subroutine more defined </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> var b defined 0 </identifier>
<symbol> ; </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> var b used 0 </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>